<div id="player"></div>
<script>
//what if you unpacked the array with all their times added them together and built a function that seeks to the propper time in the playlist
//you unpack every x hours. Then when the last video ends you reset
//pass id array, pass length array?
//Add in looping and if the gon.startime > integer multiple of the total footage, do calc based on that
//Instead of synchronous updates to the server, the admin makes asynchronous decisions


  var starttime = gon.starttime; 

  var currentvideoplaying;
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  var player;
  function onYouTubePlayerAPIReady() {
    player = new YT.Player('player', {
      height: '480',
      width: '853',
	playerVars:{
			autoplay: 1,
			controls: 0,
			rel: 0,
			loop: 1,
			showinfo: 0
		},

     loadPlaylist:{
        listType:'playlist'
     },
		
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }
  function onPlayerReady(event) {

	var runningtotal = 0;
	var index;
    var indextime;

	while (starttime > gon.totalfootage){
		starttime -= gon.totalfootage;
	}
	
	if(starttime < gon.videolengths[0]){
		//The time is less than the length of the first video. Play first at the time.
		index = 0;
		event.target.loadPlaylist(gon.videoids, index, starttime);
		
	} else{
	
	for (var i = 0; i < gon.videoids.length ; i++){
		runningtotal += gon.videolengths[i];
		
		if (runningtotal >= starttime){
			indextime = starttime - gon.videolengths[i-1];
			index = i;
			runningtotal = 0;
			event.target.loadPlaylist(gon.videoids,index,indextime);
			break;
		}//end if 
			
		}//end for
	}//end else
}//end onplayerready

  function onPlayerStateChange(event) {
	
	if (event.data == YT.PlayerState.PLAYING) {
        var url = event.target.getVideoUrl();
        // "http://www.youtube.com/watch?v=gzDS-Kfd5XQ&feature=..."
        var match = url.match(/[?&]v=([^&]+)/);
        // ["?v=gzDS-Kfd5XQ", "gzDS-Kfd5XQ"]
        currentvideoplaying = match[1];
		//This is the current playing videoID
    }
	
	
    if (event.data == YT.PlayerState.ENDED) {

	if(currentvideoplaying == gon.videoidcurrent.slice(-1)[0]) {
	}
	
    }
  }
  function stopVideo() {
    player.stopVideo();
  }

</script>

<p>Go to Live</p>
<p>Previous Stream | Next Stream</p>
<p>Subscribe Button</p>
<p>#Subscribers </p>
<p>Contribute Field</p>

